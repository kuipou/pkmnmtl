{"version":3,"sources":["style.scss","lib/_lib.scss","lib/_sanitize.scss","style.css","lib/_mixins.scss","_typography.scss","../../node_modules/mappy-breakpoints/_mappy-breakpoints.scss","_grid.scss","_header.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","_footer.scss"],"names":[],"mappings":"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","file":"style.css","sourceRoot":"/source/","sourcesContent":["/*!\nTheme Name: Montreal Pokemon League\nTheme URI: http://www.pkmnleague-mtl.com/\nAuthor: Christophe Rudyj\nAuthor URI: http://chrisrudyj.me\nDescription: Site of the Montreal Pokemon League \nVersion: 0\nText Domain: plmtl\n*/\n\n@import 'https://fonts.googleapis.com/css?family=Merriweather+Sans:400,400i,700,700i|Oswald:300,400,700&subset=latin-ext';\n@import  \"lib/lib\";\n@import  \"lib/mixins\";\n\n\n$breakpoints: (\n  'small'     : 320px,\n  'med'       : 640px,\n  'large'     : 920px,\n  'wide'      : 1200px,\n  'mega'      : 1400px,\n  // ...\n  );\n\n// Configuring Susy Defaults\n$susy: (\n  columns:12,\n  global-box-sizing: border-box,\n  utter-position: split,\n  debug: (image: show)\n  );\n\n// Colors\n\n$text-nav     : #1a5773;\n$text         : #0a0101;\n$text-invert  : invert($text);\n$red-ball     : #cd0b0b;\n$red-nav      : darken($red-ball, 10%);\n\n\n//IMPORTANT TO REMOVE\n$debug-1: #00796B;\n$debug-2: #d35400;\n\n//Tyypo\n@import \"typography\";\n@import \"grid\";\n@import \"header\";\n@import \"footer\";\n\n\n//@import \"input\";\n","/* Default Setup for Christophe Rudyj's Gulp */\n// @import \"font-awesome-compass\";\n// @import \"font-awesome\";\n@import \"../../../node_modules/susy/sass/susy\";\n//@import \"../../../node_modules/breakpoint-sass/stylesheets/breakpoint\";\n@import \"../../../node_modules/mappy-breakpoints/mappy-breakpoints\";\n// @import \"breakpoint\";\n@import \"sanitize\";\n ","/*! sanitize.css v3.3.0 | CC0 1.0 Public Domain | github.com/10up/sanitize.css */\n\n/* Latest tested: Android 6, Chrome 48, Edge 13, Firefox 44, Internet Explorer 11, iOS 9, Opera 35, Safari 9, Windows Phone 8.1 */\n\n/*\n * Normalization\n */\n\nabbr[title] {\n  text-decoration: underline; /* Chrome 48+, Edge 12+, Internet Explorer 11-, Safari 9+ */\n  text-decoration: underline dotted; /* Firefox 40+ */\n}\n\naudio:not([controls]) {\n  display: none; /* Chrome 44-, iOS 8+, Safari 9+ */\n}\n\nb,\nstrong {\n  font-weight: bolder; /* Edge 12+, Safari 6.2+, and Chrome 18+ */\n}\n\nbutton {\n  -webkit-appearance: button; /* iOS 8+ */\n  overflow: visible; /* Internet Explorer 11- */\n}\n\nbutton,\ninput {\n}\n\nbutton::-moz-focus-inner, input::-moz-focus-inner {\n  border: 0;/* Firefox 4+ */\n  padding: 0;/* Firefox 4+ */\n}\n\nbutton:-moz-focusring, input:-moz-focusring {\n  outline: 1px dotted ButtonText;/* Firefox 4+ */\n}\n\nbutton,\nselect {\n  text-transform: none; /* Firefox 40+, Internet Explorer 11- */\n}\n\ndetails {\n  display: block; /* Edge 12+, Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+ */\n}\n\nhtml {\n  -ms-overflow-style: -ms-autohiding-scrollbar; /* Edge 12+, Internet Explorer 11- */\n  overflow-y: scroll; /* All browsers without overlaying scrollbars */\n  -webkit-text-size-adjust: 100%; /* iOS 8+, Windows Phone 8.1+ */\n}\n\nhr {\n  overflow: visible; /* Internet Explorer 11-, Edge 12+ */\n}\n\ninput {\n  -webkit-border-radius: 0 /* iOS 8+ */\n}\n\ninput[type=\"button\"],\n  input[type=\"reset\"],\n  input[type=\"submit\"] {\n  -webkit-appearance: button;/* iOS 8+ */\n}\n\ninput[type=\"number\"] {\n  width: auto;/* Firefox 36+ */\n}\n\ninput[type=\"search\"] {\n  -webkit-appearance: textfield;/* Chrome 45+, Safari 9+ */\n}\n\ninput[type=\"search\"]::-webkit-search-cancel-button,\n    input[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;/* Chrome 45+, Safari 9+ */\n}\n\nmain {\n  display: block; /* Android 4.3-, Internet Explorer 11-, Windows Phone 8.1+ */\n}\n\npre {\n  overflow: auto; /* Internet Explorer 11- */\n}\n\nprogress {\n  display: inline-block; /* Internet Explorer 11-, Windows Phone 8.1+ */\n}\n\nsummary {\n  display: block; /* Firefox 40+, Internet Explorer 11-, Windows Phone 8.1+ */\n}\n\nsvg:not(:root) {\n  overflow: hidden; /* Internet Explorer 11- */\n}\n\ntemplate {\n  display: none; /* Android 4.3-, Internet Explorer 11-, iOS 7-, Safari 7-, Windows Phone 8.1+ */\n}\n\ntextarea {\n  overflow: auto; /* Edge 12+, Internet Explorer 11- */\n}\n\n[hidden] {\n  display: none; /* Internet Explorer 10- */\n}\n\n/*\n * Universal inheritance\n */\n\n*,\n:before,\n:after {\n  box-sizing: inherit;\n}\n\n* {\n  font-size: inherit;\n  line-height: inherit;\n}\n\n:before,\n:after {\n  text-decoration: inherit;\n  vertical-align: inherit;\n}\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-family: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n}\n\n\n\n/*\n * Opinionated defaults\n */\n\n/* specify the margin and padding of all elements */\n\n* {\n  margin: 0;\n  padding: 0;\n}\n\n/* specify the border style and width of all elements */\n\n*,\n:before,\n:after {\n  border-style: solid;\n  border-width: 0;\n}\n\n/* remove the tapping delay from clickable elements */\n\na,\narea,\nbutton,\ninput,\nlabel,\nselect,\ntextarea,\n[tabindex] {\n  -ms-touch-action: manipulation;\n      touch-action: manipulation;\n}\n\n/* specify the standard appearance of selects */\n\nselect {\n  -moz-appearance: none;    /* Firefox 40+ */\n  -webkit-appearance: none /* Chrome 45+ */\n}\n\nselect::-ms-expand {\n  display: none;/* Edge 12+, Internet Explorer 11- */\n}\n\nselect::-ms-value {\n  color: currentColor;/* Edge 12+, Internet Explorer 11- */\n}\n\n/* use current current as the default fill of svg elements */\n\nsvg {\n  fill: currentColor;\n}\n\n/* specify the progress cursor of updating elements */\n\n[aria-busy=\"true\"] {\n  cursor: progress;\n}\n\n/* specify the pointer cursor of trigger elements */\n\n[aria-controls] {\n  cursor: pointer;\n}\n\n/* specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */\n\n[aria-disabled] {\n  cursor: default;\n}\n\n/* specify the style of visually hidden yet accessible elements */\n\n[hidden][aria-hidden=\"false\"] {\n  clip: rect(0 0 0 0);\n  display: inherit;\n  position: absolute\n}\n\n[hidden][aria-hidden=\"false\"]:focus {\n  clip: auto;\n}\n\n\n\n/*\n * Configurable defaults\n */\n\n/* specify the background repeat of all elements */\n\n* {\n  background-repeat: no-repeat;\n}\n\n/* specify the root styles of the document */\n\n:root {\n  background-color: #ffffff;\n  box-sizing: border-box;\n  color: #000000;\n  cursor: default;\n  font: 100%/1.5 sans-serif;\n}\n\n/* specify the text decoration of anchors */\n\na {\n  text-decoration: none;\n}\n\n/* specify the alignment of media elements */\n\naudio,\ncanvas,\niframe,\nimg,\nsvg,\nvideo {\n  vertical-align: middle;\n}\n\n/* specify the coloring of form elements */\n\nbutton,\ninput,\nselect,\ntextarea {\n  background-color: transparent;\n  color: inherit;\n}\n\n/* specify the minimum height of form elements */\n\nbutton,\n[type=\"button\"],\n[type=\"date\"],\n[type=\"datetime\"],\n[type=\"datetime-local\"],\n[type=\"email\"],\n[type=\"month\"],\n[type=\"number\"],\n[type=\"password\"],\n[type=\"reset\"],\n[type=\"search\"],\n[type=\"submit\"],\n[type=\"tel\"],\n[type=\"text\"],\n[type=\"time\"],\n[type=\"url\"],\n[type=\"week\"],\nselect,\ntextarea {\n  min-height: 1.5em;\n}\n\n/* specify the font family of code elements */\n\ncode,\nkbd,\npre,\nsamp {\n  font-family: monospace, monospace;\n}\n\n/* specify the list style of nav lists */\n\nnav ol,\nnav ul {\n  list-style: none;\n}\n\n/* specify the font size of small elements */\n\nsmall {\n  font-size: 75%;\n}\n\n/* specify the border styling of tables */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* specify the resizability of textareas */\n\ntextarea {\n  resize: vertical;\n}\n\n/* specify the background color, font color, and drop shadow of text selections */\n\n::-moz-selection {\n  background-color: #b3d4fc; /* required when declaring ::selection */\n  color: #ffffff;\n  text-shadow: none;\n}\n\n::selection {\n  background-color: #b3d4fc; /* required when declaring ::selection */\n  color: #ffffff;\n  text-shadow: none;\n}",null,"// Collection of Mixins\n\n@mixin transition($args...) {\n  -webkit-transition: $args;\n  -moz-transition: $args;\n  -ms-transition: $args;\n  -o-transition: $args;\n  transition: $args;\n}\n// Hide from screenreaders and browsers\n//\n// Credit: HTML5 Boilerplate\n\n.hidden {\n  display: none !important;\n  visibility: hidden !important;\n}\n\n\n// Vertical Align \n// by Z63  src : http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/\n@mixin vertical-align {\n  position: relative;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n}\n// Embeds responsive\n// From Bootstrap 3.2 SASS\n//\n// Credit: Nicolas Gallagher and SUIT CSS.\n\n.embed-responsive {\n  position: relative;\n  display: block;\n  height: 0;\n  padding: 0;\n  overflow: hidden;\n\n  .embed-responsive-item,\n  iframe,\n  embed,\n  object,\n  video {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    border: 0;\n  }\n\n  // Modifier class for 16:9 aspect ratio\n  &.embed-responsive-16by9 {\n    padding-bottom: 56.25%;\n  }\n\n  // Modifier class for 4:3 aspect ratio\n  &.embed-responsive-4by3 {\n    padding-bottom: 75%;\n  }\n}\n\n\n// material design box\n// By CSS Tricks @ https://css-tricks.com/snippets/sass/material-shadows-mixin/\n/// Gives a card depth effect.\n/// @param {Number} $depth - depth level (between 1 and 5)\n/// @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design\n/// @requires {function} top-shadow\n/// @requires {function} bottom-shadow\n@mixin card($depth) {\n  @if $depth < 1 {\n    box-shadow: none;\n  } @else if $depth > 5 {\n    @warn \"Invalid $depth `#{$depth}` for mixin `card`.\";\n  } @else {\n    box-shadow: bottom-shadow($depth), top-shadow($depth);  \n  }\n}\n\n\n/// Computes a top-shadow for a card effect.\n/// @param {Number} $depth - depth level\n/// @return {List}\n@function top-shadow($depth) {\n  $primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;\n  $blur: nth(1.5 3 10 14 19, $depth) * 4px;\n  $color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));\n\n  @return 0 $primary-offset $blur $color;\n}\n\n/// Computes a bottom-shadow for a card effect.\n/// @param {Number} $depth - depth level\n/// @return {List}\n@function bottom-shadow($depth) {\n  $primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;\n  $blur: nth(1 3 3 5 6, $depth) * 4px;\n  $color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));\n\n  @return 0 $primary-offset $blur $color;\n}\n\n\n/* Hang */\n@-webkit-keyframes hvr-hang {\n  0% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n\n  50% {\n    -webkit-transform: translateY(4px);\n    transform: translateY(4px);\n  }\n\n  100% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n}\n\n@keyframes hvr-hang {\n  0% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n\n  50% {\n    -webkit-transform: translateY(4px);\n    transform: translateY(4px);\n  }\n\n  100% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n}\n\n@-webkit-keyframes hvr-hang-sink {\n  100% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n}\n\n@keyframes hvr-hang-sink {\n  100% {\n    -webkit-transform: translateY(8px);\n    transform: translateY(8px);\n  }\n}\n\n.hvr-hang {\n  display: inline-block;\n  vertical-align: middle;\n  -webkit-transform: translateZ(0);\n  transform: translateZ(0);\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n  -moz-osx-font-smoothing: grayscale;\n}\n.hvr-hang:hover, .hvr-hang:focus, .hvr-hang:active {\n  -webkit-animation-name: hvr-hang-sink, hvr-hang;\n  animation-name: hvr-hang-sink, hvr-hang;\n  -webkit-animation-duration: .3s, 1.5s;\n  animation-duration: .3s, 1.5s;\n  -webkit-animation-delay: 0s, .3s;\n  animation-delay: 0s, .3s;\n  -webkit-animation-timing-function: ease-out, ease-in-out;\n  animation-timing-function: ease-out, ease-in-out;\n  -webkit-animation-iteration-count: 1, infinite;\n  animation-iteration-count: 1, infinite;\n  -webkit-animation-fill-mode: forwards;\n  animation-fill-mode: forwards;\n  -webkit-animation-direction: normal, alternate;\n  animation-direction: normal, alternate;\n}\n","// Mixin for Tyopgraphy\n// Lunchbox Font\n@mixin meri ($size, $weight) {\n  font: $size 'Merriweather Sans', Helvetica, Arial, sans-serif;\n  font-weight:$weight;\n  }\n@mixin oswald ($size, $weight) {\n  font: $size 'Oswald', Helvetica, Arial, sans-serif;\n  font-weight:$weight;\n  }\n\n/* Contextual heading sizes with Sass\nby:  Zach Green Url: http://codepen.io/zgreen/post/contextual-heading-sizes-with-sass\n\n Create a step size.*/\n/* This is the percentage each heading will be reduced by. */\n$step-size-heading: 0.33333;\n/* Amplifier value */\n$amplifier-heading: 1.5;\n/* The mixin */\n@mixin heading-size($size) {\n    font-size: $size * $step-size-heading * $amplifier-heading + em;\n}\n\n\n$h1-fontsize: 4.2rem;\n$h2-fontsize: 3.56rem;\n$h3-fontsize: 2.92rem;\n$h4-fontsize: 2.28rem;\n$h5-fontsize: 1.64rem;\n$h6-fontsize: 1rem;\n$range : 920 - 320 !default;\n$intervals: 20 ;\n$interval-size: $range / $intervals ;\na {\n  text-decoration: none;\n}\n\nhtml{\n  line-height: 1.5;\n\n  font-family: 'Merriweather Sans', Helvetica, Arial, sans-serif;\n    font-size: 16px;\n  \n\n  @include mappy-bp(med) {\n    font-size: 14.5px;\n  \n  }\n\n\n\n  \n  font-weight: normal;\n  color: $text;\n}\nh1, h2, h3, h4, h5, h6 {\n  font-weight: 700;\n  line-height: 1.1;\n  font-family: 'Oswald', Helvetica, Arial, sans-serif;\n  color: darken( $text-nav, 14%);\n}\n\nh1 {@include heading-size(6); }\nh2 {@include heading-size(5); }\nh3 {@include heading-size(4); }\nh4 {@include heading-size(3); }\nh5 {@include heading-size(2); }\nh6 {@include heading-size(1); }\n\n// Text Styles\nem { font-style: italic; }\nstrong { font-weight: 700; }\nsmall { font-size: 75%; }\n.light { font-weight: 300; }\n.thin { font-weight: 200; }\n\n\n.flow-text{\n  font-weight: 300;\n  $i: 0;\n  @while $i <= $intervals {\n    @media only screen and (min-width : 360 + ($i * $interval-size)) {\n      font-size: 1.2rem * (1 + (.02 * $i));\n    }\n    $i: $i + 1;\n  }\n\n  // Handle below 360px screen\n  @media only screen and (max-width: 360px) {\n    font-size: 1.2rem;\n  }\n}","// Mappy breakpoints\n// -----------------\n// Output media query with focus on min-width, max-width, min-height and max-height.\n// Other media rules are passed as the second argument in a map\n//\n// @author Zell Liew\n// =================\n$breakpoints: () !default;\n$mappy-queries: () !default;\n\n// Mappy BP [Mixin]\n// ----------------\n// - $queries         : <string> or <number> in the format:\n//                      <min-width> <max-width> h <min-height> <max-height> <key> <value>\n// - $type            : <media-type>\n// - $query-fallback  : <string> selector class\n// - $breakpoints     : <map>\n@mixin mappy-bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n\n  // Gets mappy map through mappy-bp fn\n  $mappy-map: mappy-bp($queries, $type, $query-fallback, $breakpoints);\n\n  // Outputs media string\n  @media #{map-get($mappy-map, type)} and #{map-get($mappy-map, media-string)} {\n    @content;\n  }\n\n  // If a query fallback is provided\n  @if $query-fallback {\n    #{$query-fallback} & {\n      @content;\n    }\n  }\n}\n\n// Mappy Query [Mixin]\n// -------------------\n// Output query from $mappy-queries map.\n// $query : <string> from $mappy-queries key\n@mixin mappy-query($query, $mappy-queries: $mappy-queries) {\n  @if not map-has-key($mappy-queries, $query) {\n    @error \"#{$mappy-queries} does not contain #{$query}\";\n  }\n\n  $mappy-map: map-get($mappy-queries, $query);\n\n  @media #{map-get($mappy-map, type)} and #{map-get($mappy-map, media-string)} {\n    @content;\n  }\n\n  // If a query fallback is provided\n  @if map-get($mappy-map, query-fallback) {\n    #{map-get($mappy-map, query-fallback)} & {\n      @content;\n    }\n  }\n}\n\n// Mappy BP [Function]\n// -------------------\n// Returns a map with 3 keys\n// - type           : Media type\n// - media-string   : media query string\n// - query-fallback : query fallback (if any)\n@function mappy-bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n  $media-string: ();\n  $_return: ();\n  $media-map: parse-bp($queries, $breakpoints);\n\n  @each $key, $value in $media-map {\n    @if $value and $value != 0 {\n      @if $media-string == (()) {\n        $media-string: append($media-string, unquote(\"(#{$key}: #{$value})\"));\n      }\n\n      @else {\n        $media-string: append($media-string, unquote(\"and (#{$key}: #{$value})\"));\n      }\n    }\n  }\n  $_return: (\n    type: $type,\n    media-string: implode($media-string),\n    query-fallback: $query-fallback\n  );\n\n  @return $_return;\n}\n\n// BP [Mixin]\n// ----------\n// Convenience mixin for Mappy Breakpoints\n@mixin bp($queries, $type: all, $query-fallback: null, $breakpoints: $breakpoints) {\n  @include mappy-bp($queries, $type, $query-fallback, $breakpoints) {\n    @content;\n  }\n}\n\n// Parse BP [function]\n// -------------------\n// Parses arguments and returns a map with 4 keys\n@function parse-bp($queries, $breakpoints) {\n  $_return: ();\n  $_i: 1;\n  $_minw: null;\n  $_maxw: null;\n  $_minh: null;\n  $_maxh: null;\n  $_length: length($queries);\n\n  // Checks for width queries\n  $_minw: nth($queries, 1);\n  $_minw: mappy-validate($_minw, $breakpoints);\n\n  // Check for width queries\n  @if $_minw {\n    $_minw: mappy-convert-to-em($_minw);\n    $_return: map-merge($_return, (min-width: $_minw));\n    $queries: set-nth($queries, 1, null);\n  }\n\n  // Checks if there is a max width query\n  @if $_minw and $_length >= 2 {\n    $_maxw: nth($queries, 2);\n    $_maxw: mappy-validate($_maxw, $breakpoints);\n  }\n\n  @if $_maxw {\n    $_maxw: mappy-convert-to-em($_maxw - 1px);\n    $_return: map-merge($_return, (max-width: $_maxw));\n    $queries: set-nth($queries, 2, null);\n  }\n\n  // Checks for height queries\n  $_h: index($queries, h) or index($queries, height);\n\n  @if $_h {\n    $_minh: nth($queries, $_h + 1);\n    $_minh: mappy-validate($_minh, $breakpoints);\n\n    @if $_minh {\n      $_minh: mappy-convert-to-em($_minh);\n      $_return: map-merge($_return, (min-height: $_minh));\n      $queries: set-nth($queries, $_h + 1, null);\n    }\n\n    // Checks if there is a max height query\n    @if $_length - $_h >= 2 {\n      $_maxh: nth($queries, $_h + 2);\n      $_maxh: mappy-validate($_maxh, $breakpoints);\n    }\n\n    @if $_maxh {\n      $_maxh: mappy-convert-to-em($_maxh - 1px);\n      $_return: map-merge($_return, (max-height: $_maxh));\n      $queries: set-nth($queries, $_h + 2, null);\n    }\n    // Reset h marker\n    $queries: set-nth($queries, $_h, null);\n  }\n\n  // Checks for other queries\n  @while $_i <= length($queries) {\n    $_key: nth($queries, $_i);\n\n    @if $_key and $_length - $_i >= 1 {\n      $_val: nth($queries, $_i + 1);\n      $_return: map-merge($_return, (#{$_key}: $_val));\n      $queries: set-nth($queries, $_i, null);\n      $queries: set-nth($queries, $_i + 1, null);\n    }\n\n    @else if $_key {\n      @warn unquote('\"Mappy Breakpoints is missing value for media feature \"#{$_key}\"\"');\n    }\n    $_i: $_i + 1;\n  }\n  @return $_return;\n}\n\n// Mappy Validate [Function]\n// -------------------------\n// Checks if $query given is one of the following:\n// 1) Is a $key in the $breakpoints map\n// 2) Is a number\n// 3) Is a \"max\", \"max-width\" or \"max-height\" string\n@function mappy-validate($query, $breakpoints) {\n  $_return: null;\n\n  @if map-has-key($breakpoints, $query) {\n    $_return: map-get($breakpoints, $query);\n  }\n\n  @else if type-of($query) == number {\n    $_return: $query;\n  }\n\n  @else if $query == \"max\" or $query == \"max-height\" or $query == \"max-width\" {\n    $_return: 0;\n  }\n\n  @else {\n    $_return: null;\n  }\n  @return $_return;\n}\n\n// Mappy Convert To Em [Function]\n// -------------------------------\n// Checks and converts px values to em. Leave other units untouched.\n\n@function mappy-convert-to-em($val) {\n  @if unit($val) == \"px\" or $val == 0 {\n    @return mappy-em($val);\n  } @else if unit($val) == \"em\" {\n    @return $val;\n  } @else if unit($val) == \"rem\" {\n    @return mappy-strip-unit($val) * 1em;\n  } @else {\n    @error unquote(\"Breakpoint value must have a unit if it's a number\");\n  }\n}\n\n// Mappy Em [Function]\n// --------------------\n// Converts pixels to em with $base-font-size\n// - https://gist.github.com/ijy/1441967\n@function mappy-em($target, $context: 16px) {\n  @if $target == 0 {\n    @return 0;\n  }\n  @return $target / $context * 1em;\n}\n\n@function mappy-strip-unit($num) {\n  @return $num / ($num * 0 + 1);\n}\n\n// Implode [Function]\n// --------------------\n// Implode a list into a string\n@function implode($list, $glue: ' ') {\n  $res: null;\n  $len: length($list);\n\n  @for $i from 1 through $len {\n    $e: nth($list, $i);\n    @if $i == $len {\n      $res: unquote(\"#{$res}#{$e}\");\n    }\n    @else {\n      $res: unquote(\"#{$res}#{$e}#{$glue}\");\n    }\n  }\n\n  @return $res;\n}\n","body {display:flex;  \n  flex-direction: column;\n  min-height:100vh;\n  font-size:16px;\n}\n.container {\n  @include mappy-bp (large) {\n    width:80%;\n    margin: 0 auto;\n  }\n}\n#top, #front-top, #top ul {display:flex; flex-wrap: wrap; justify-content:center;}\n.logo {flex:1 ;}\n#front-top ul {display:flex; justify-content: space-around;}\n.info {display:flex; flex-direction: row; justify-content: space-between; align-items:center;\n  .split {flex: 1 0 300px;\n    ul { display:flex; flex-direction:column; justify-content:center;}\n  }\n}\n#top li, #front-top li {flex-direction: column; flex: 1 0 200px;}","//Top menu \n\n#top {\n  z-index: 999;\n  background-color: darken($red-ball, 5%);\n  height:200px;\n  .top {width:100%;}\n  \n  @include card(2);\n  .logo {\n    background: url(images/plmtl_logo.png) center no-repeat;\n    \n    height:135px;\n    z-index: 99;\n  }\n  li{\n    @include oswald(1.5em, 700);\n    // background-color: #333; \n    width:span(2); }\n  @include mappy-bp (large) {\n    height:100px;  \n    ul { justify-content:center; text-align:center;\n    li {@include oswald(1.5em, 700);\n      // flex:1 0 50px;\n\n        }\n      }\n  }\n}","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n",".front-footer {\n  height:40px;\n  display:flex; \n  background-color: $red-ball;\n  margin-top: 1em;\n  .tag { height:20px; \n\n    flex:1;\n    margin-top: auto;\n    margin-bottom: auto;\n    text-align: center;\n    padding-left:100px;\n    @include oswald(1em, 400);\n    color: $text-invert;\n  }\n  .social {\n\n    // flex:1 0 200px;\n    width:span(3 of 12);\n     @include oswald(1em, 700);\n     padding-right: 0.5em;\n\n      a, span {color: $text-invert;}\n      span {padding-right:1em;}\n     ul{\n      display: flex;\n      justify-content:flex-end; \n      align-items: center;\n      list-style: none;  \n      li {\n        width: 40px; height: 40px; \n        // margin:0 2px;\n          font-size: 1.7em;\n        display: flex;\n        align-items:center;\n        justify-content: center;\n      }\n  }\n\n}\n}"]}